{
  "swagger": "2.0",
  "info": {
    "title": "VM Management API",
    "description": "This API allows for managing virtual machines including creation, deletion, and querying available templates.",
    "version": "1.0"
  },
  "host": "10.11.1.181:6969",
  "schemes": ["http"],
  "basePath": "/",
  "paths": {
    "/v1/vms": {
      "post": {
        "summary": "Create a VM",
        "description": "Creates a virtual machine (VM) with the given configuration parameters.",
        "parameters": [
          {
            "in": "body",
            "name": "vm_config",
            "required": true,
            "description": "JSON object containing configuration for the VM",
            "schema": {
              "$ref": "#/definitions/VMConfig"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "VM created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "VM configuration added successfully. Creating VM in pve."
                }
              }
            }
          },
          "400": {
            "description": "Invalid configuration or missing required fields",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "code": {
                  "type": "integer",
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "example": "Invalid data or operation"
                },
                "details": {
                  "type": "string",
                  "example": "Request data is not JSON"
                }
              }
            }
          },
          "502": {
            "description": "Request error",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "code": {
                  "type": "integer",
                  "example": 502
                },
                "message": {
                  "type": "string",
                  "example": "Request error"
                },
                "details": {
                  "type": "string",
                  "example": "Node check request error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "code": {
                  "type": "integer",
                  "example": 500
                },
                "message": {
                  "type": "string",
                  "example": "Internal server error"
                },
                "details": {
                  "type": "string",
                  "example": "Error during VM creation process"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vms/{vm_sid}": {
      "delete": {
        "summary": "Delete a VM",
        "description": "Deletes the VM with the specified SID.",
        "parameters": [
          {
            "in": "path",
            "name": "vm_sid",
            "required": true,
            "description": "The SID of the VM to delete",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "VM deleted successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "VM configuration deleted successfully. Deleting VM in pve."
                }
              }
            }
          },
          "404": {
            "description": "No VM with SID found",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "code": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "No VM with SID found"
                },
                "details": {
                  "type": "string",
                  "example": "Ensure the SID is correct and exists."
                }
              }
            }
          },
          "500": {
            "description": "Internal server error during deletion",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "code": {
                  "type": "integer",
                  "example": 500
                },
                "message": {
                  "type": "string",
                  "example": "Internal server error during deletion"
                },
                "details": {
                  "type": "string",
                  "example": "Error during VM deletion process"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vms/templates": {
      "get": {
        "summary": "List VM Templates",
        "description": "Retrieves a list of available VM templates.",
        "responses": {
          "200": {
            "description": "List of available VM templates",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal server error during template retrieval",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "code": {
                  "type": "integer",
                  "example": 500
                },
                "message": {
                  "type": "string",
                  "example": "Internal server error during template retrieval"
                },
                "details": {
                  "type": "string",
                  "example": "Error occurred while retrieving VM templates"
                }
              }
            }
          }
        }
      }
    },
    "/v1/checkSID/{ip}": {
      "get": {
        "summary": "Check SID for IP",
        "description": "Retrieves the SID and username for a given IP address.",
        "parameters": [
          {
            "in": "path",
            "name": "ip",
            "required": true,
            "description": "The IP address to check",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "SID found for the given IP address",
            "schema": {
              "type": "object",
              "properties": {
                "ip": {
                  "type": "string",
                  "example": "10.0.0.1"
                },
                "SID": {
                  "type": "string",
                  "example": "vm-1234"
                },
                "username": {
                  "type": "string",
                  "example": "user1"
                }
              }
            }
          },
          "404": {
            "description": "No SID found for the given IP address",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "code": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "No SID found for the given IP address"
                },
                "details": {
                  "type": "string",
                  "example": "Ensure the IP address is correct and try again."
                }
              }
            }
          },
          "500": {
            "description": "Internal server error while checking SID",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "code": {
                  "type": "integer",
                  "example": 500
                },
                "message": {
                  "type": "string",
                  "example": "Internal server error while checking SID"
                },
                "details": {
                  "type": "string",
                  "example": "Error occurred while checking SID for the given IP address"
                }
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "summary": "Health Check",
        "description": "Checks the health of the API service.",
        "responses": {
          "200": {
            "description": "Service is healthy",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "healthy"
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "VMConfig": {
      "type": "object",
      "required": [
        "name",
        "desc",
        "SID"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the VM",
          "example": "RTX-4070-Ti-vm1"
        },
        "desc": {
          "type": "string",
          "description": "Description of the VM",
          "example": "Windows 11 VM with NVIDIA RTX 4070 Ti GPU"
        },
        "SID": {
          "type": "string",
          "description": "System ID of the VM",
          "example": "vm-0190169f-4688-7e12-bd14-90873638058c"
        },
        "cores": {
          "type": "integer",
          "description": "Number of CPU cores",
          "default": 6
        },
        "memory": {
          "type": "integer",
          "description": "Amount of memory in MB",
          "default": 8192
        },
        "disk_size": {
          "type": "integer",
          "description": "Size of disk in GB",
          "default": 512
        },
        "cpu_type": {
          "type": "string",
          "description": "Type of CPU to use (e.g., host)",
          "default": "host"
        },
        "clone": {
          "type": "string",
          "description": "Name of a VM to clone configuration from",
          "default": "RTX-4070-Ti-sysprep-updated"
        },
        "dns": {
          "type": "string",
          "description": "DNS server address for the VM",
          "example": "1.1.1.1"
        },
        "ip": {
          "type": "string",
          "description": "Static IP address for the VM",
          "example": "10.11.1.105"
        },
        "gateway": {
          "type": "string",
          "description": "Default gateway for the VM",
          "example": "10.0.0.1"
        },
        "pci_device": {
          "type": "string",
          "description": "Name of the PCI device to pass through to the VM",
          "default": "GeForce RTX 4070 Ti"
        }
      }
    },
    "ErrorModel": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "example": "error"
        },
        "code": {
          "type": "integer",
          "example": 400
        },
        "message": {
          "type": "string",
          "example": "Invalid configuration or missing required fields"
        },
        "details": {
          "type": "string",
          "example": "Ensure all required keys are provided."
        }
      }
    }
  }
}
